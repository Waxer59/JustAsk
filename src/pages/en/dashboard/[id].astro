---
import BaseLayout from '@/layouts/BaseLayout.astro'
import { DashboardLayout } from '@/layouts/react/DashboardLayout'
import { CandidatesTable } from '@/components/react/dasboard/CandidatesTable'
import { ChevronLeftIcon } from 'lucide-react'
import { buttonVariants } from '@/ui/button'
import { getUserSurveyById } from '@/db/services/survey'
import { getAllResultsBySurveyId } from '@/db/services/surveyResult'
import { getRelativeLocaleUrl } from 'astro:i18n'
import { getLangFromUrl } from '@/i18n/utils'
import { NOT_APLICABLE } from '@/constants'

const { user } = Astro.locals
const { id } = Astro.params

const lang = getLangFromUrl(Astro.url)

const survey = await getUserSurveyById(id!, user!.id!)

const surveyResults = (await getAllResultsBySurveyId(id!)).map(
  ({ surveyLog, ...rest }) => {
    const log = surveyLog as any[]
    return {
      ...rest,
      surveyLog: log.map((message) => ({
        id: crypto.randomUUID(),
        question: message.question,
        answer: message.answer
      }))
    }
  }
)

if (!survey) {
  return Astro.redirect('/404')
}
---

<BaseLayout>
  <DashboardLayout client:only="react">
    <div class="flex items-center gap-2 mt-4">
      <a
        href={getRelativeLocaleUrl(lang, 'dashboard')}
        class={buttonVariants({ variant: 'ghost', size: 'icon' })}>
        <ChevronLeftIcon className="w-6 h-6" />
      </a>
      <h1 class="text-3xl font-bold">{survey.title}</h1>
    </div>
    <CandidatesTable
      data={surveyResults?.map(
        ({
          category,
          overallScore,
          scoreHardSkills,
          scoreSoftSkills,
          isAttempt,
          surveyResultToSurveyUser,
          surveyLog
        }) => ({
          category: category ?? NOT_APLICABLE,
          overallScore: overallScore ?? 0,
          hardSkillsScore: scoreHardSkills ?? 0,
          softSkillsScore: scoreSoftSkills ?? 0,
          isAttempt: isAttempt ?? false,
          name: surveyResultToSurveyUser[0].surveyUser?.name ?? NOT_APLICABLE,
          email: surveyResultToSurveyUser[0].surveyUser?.email ?? NOT_APLICABLE,
          log: surveyLog as any[]
        })
      ) ?? []}
      surveyName={survey.title}
      client:only="react"
    />
  </DashboardLayout>
</BaseLayout>
